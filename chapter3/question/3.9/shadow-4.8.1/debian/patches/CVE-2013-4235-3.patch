[Ubuntu note: removed changes made to 'configure.ac' file]

Backport of:

From e0d33fe77cee9364fffbfa58c499b459040d4c7f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Christian=20G=C3=B6ttsche?= <cgzones@googlemail.com>
Date: Fri, 5 Aug 2022 17:57:24 +0200
Subject: [PATCH] Require symlink support

Require lstat(2), lchown(2), S_IFLNK and S_ISLNK from POSIX.1-2001.

Already unconditionally used in lib/tcbfuncs.c and lib/run_part.c.
---
 configure.ac      |  2 +-
 lib/commonio.c    |  2 --
 lib/defines.h     | 16 ----------------
 libmisc/copydir.c | 10 ++--------
 4 files changed, 3 insertions(+), 27 deletions(-)

diff --git a/lib/commonio.c b/lib/commonio.c
index 9e0fde600..80288d644 100644
Index: shadow-4.8.1/lib/commonio.c
===================================================================
--- shadow-4.8.1.orig/lib/commonio.c
+++ shadow-4.8.1/lib/commonio.c
@@ -88,7 +88,6 @@ int lrename (const char *old, const char
 	int res;
 	char *r = NULL;
 
-#if defined(S_ISLNK)
 #ifndef __GLIBC__
 	char resolved_path[PATH_MAX];
 #endif				/* !__GLIBC__ */
@@ -105,7 +104,6 @@ int lrename (const char *old, const char
 			new = r;
 		}
 	}
-#endif				/* S_ISLNK */
 
 	res = rename (old, new);
 
Index: shadow-4.8.1/lib/defines.h
===================================================================
--- shadow-4.8.1.orig/lib/defines.h
+++ shadow-4.8.1/lib/defines.h
@@ -238,22 +238,6 @@ char *strchr (), *strrchr (), *strtok ()
 # endif
 #endif
 
-#ifndef S_ISLNK
-#define S_ISLNK(x) (0)
-#endif
-
-#if HAVE_LCHOWN
-#define LCHOWN lchown
-#else
-#define LCHOWN chown
-#endif
-
-#if HAVE_LSTAT
-#define LSTAT lstat
-#else
-#define LSTAT stat
-#endif
-
 #if HAVE_TERMIOS_H
 # include <termios.h>
 # define STTY(fd, termio) tcsetattr(fd, TCSANOW, termio)
Index: shadow-4.8.1/libmisc/copydir.c
===================================================================
--- shadow-4.8.1.orig/libmisc/copydir.c
+++ shadow-4.8.1/libmisc/copydir.c
@@ -78,14 +78,12 @@ static int copy_dir (const char *src, co
                      const struct stat *statp, const struct timeval mt[],
                      uid_t old_uid, uid_t new_uid,
                      gid_t old_gid, gid_t new_gid);
-#ifdef	S_IFLNK
 static /*@null@*/char *readlink_malloc (const char *filename);
 static int copy_symlink (const char *src, const char *dst,
                          unused bool reset_selinux,
                          const struct stat *statp, const struct timeval mt[],
                          uid_t old_uid, uid_t new_uid,
                          gid_t old_gid, gid_t new_gid);
-#endif				/* S_IFLNK */
 static int copy_hardlink (const char *dst,
                           unused bool reset_selinux,
                           struct link_name *lp);
@@ -243,7 +241,7 @@ int copy_tree (const char *src_root, con
 			return -1;
 		}
 
-		if (LSTAT (src_root, &sb) == -1) {
+		if (lstat (src_root, &sb) == -1) {
 			return -1;
 		}
 
@@ -384,7 +382,7 @@ static int copy_entry (const char *src,
 	struct link_name *lp;
 	struct timeval mt[2];
 
-	if (LSTAT (src, &sb) == -1) {
+	if (lstat (src, &sb) == -1) {
 		/* If we cannot stat the file, do not care. */
 	} else {
 #ifdef HAVE_STRUCT_STAT_ST_ATIM
@@ -416,7 +414,6 @@ static int copy_entry (const char *src,
 			                old_uid, new_uid, old_gid, new_gid);
 		}
 
-#ifdef	S_IFLNK
 		/*
 		 * Copy any symbolic links
 		 */
@@ -425,7 +422,6 @@ static int copy_entry (const char *src,
 			err = copy_symlink (src, dst, reset_selinux, &sb, mt,
 			                    old_uid, new_uid, old_gid, new_gid);
 		}
-#endif				/* S_IFLNK */
 
 		/*
 		 * See if this is a previously copied link
@@ -518,7 +514,6 @@ static int copy_dir (const char *src, co
 	return err;
 }
 
-#ifdef	S_IFLNK
 /*
  * readlink_malloc - wrapper for readlink
  *
@@ -636,7 +631,6 @@ static int copy_symlink (const char *src
 
 	return 0;
 }
-#endif				/* S_IFLNK */
 
 /*
  * copy_hardlink - copy a hardlink
